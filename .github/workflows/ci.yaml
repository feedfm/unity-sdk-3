name: CI
on:
  push:
    branches:
    - main
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Semantic release
      id: semantic
      uses: cycjimmy/semantic-release-action@v2.1.3
      with:
        extra_plugins: |
          @semantic-release/changelog 
          @semantic-release/git
          @iam1337/create-unitypackage
        semantic_version: 19.0.5
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create upm branch
      run: |
        git branch -d upm &> /dev/null || echo upm branch not found
        git subtree split -P "$PKG_ROOT" -b upm
        git checkout upm
        
        if [[ -d "Scripts" ]]; then
          git mv Scripts Runtime
          git mv Scripts.meta Runtime.meta
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Scripts => Runtime"
        fi 
        
        if [[ -d "Scenes" ]]; then
          rm -rf Scenes
          rm -f Scenes.meta
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Remove Scenes"
        fi 
        
        if [[ -d "TextMesh Pro" ]]; then
          rm -rf "TextMesh Pro"
          rm -f "TextMesh Pro.meta"
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Remove TMPro"
        fi

         if [[ -d "Demos" ]]; then
          rm -rf Demos
          rm -f "Demos.meta"
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Remove Demos"
        fi

        if [[ -d "Legacy" ]]; then
          rm -rf Legacy
          rm -f "Legacy.meta"
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Remove Legacy"
        fi

        if [[ -d "Samples" ]]; then
          git mv Samples Samples~
          rm -f Samples.meta
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Samples => Samples~"
        fi

        git push -f -u origin upm
      env:
        PKG_ROOT: Assets
    - name: Create upm git tag
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        git tag $TAG upm
        git push origin --tags
      env:
        TAG: upm/v${{ steps.semantic.outputs.new_release_version }}